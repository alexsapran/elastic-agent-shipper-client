# This script is a modified version of the one provided by github.com/bool64/dev.
name: benchmark
on:
  pull_request:
  workflow_dispatch:
    inputs:
      old:
        description: 'Old Ref'
        required: false
        default: 'main'
      new:
        description: 'New Ref'
        required: true

# Cancel the workflow in progress in newer build is about to start.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GO111MODULE: "on"
  RUN_BASE_BENCHMARK: "on"  # Runs benchmark for PR base in case benchmark result is missing.
jobs:
  bench:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ (github.event.inputs.new != '') && github.event.inputs.new || github.event.ref }}

      - name: Install Go stable
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Go cache
        uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache

      - name: Cache mage
        id: cache-mage
        uses: actions/cache@v3
        with:
          path: ~/go/bin/mage
          key: ${{ runner.os }}-mage

      - name: Download mage
        if: steps.cache-mage.outputs.cache-hit != 'true'
        run: go install github.com/magefile/mage@v1.13.0

      - name: Restore benchstat
        uses: actions/cache@v2
        with:
          path: ~/go/bin/benchstat
          key: ${{ runner.os }}-benchstat-legacy

      - name: Benchmark diff
        id: bench-next
        run: |
          OUTPUT=$(mage benchmark:all bench-next 6)
          echo "${OUTPUT}"
          echo "next<<EOF" >> $GITHUB_OUTPUT && echo "$OUTPUT" >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

      - name: Run benchmark for base code
        id: bench-base
        if: env.RUN_BASE_BENCHMARK == 'on' && (github.event.pull_request.base.sha != '' || github.event.inputs.old != '')
        run: |
          git fetch origin main ${{ github.event.pull_request.base.sha }}
          HEAD=$(git rev-parse HEAD)
          git reset --hard ${{ github.event.pull_request.base.sha }}
          BASE=$(mage benchmark:all bench-main 10)
          git reset --hard $HEAD
          echo "base<<EOF" >> $GITHUB_OUTPUT && echo "$BASE" >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

      - name: Diff with base
        id: diff
        run: |
          echo "${{ steps.bench-next.outputs.next }}" > bench-next
          echo "${{ steps.bench-base.outputs.base }}" > bench-base
          OUTPUT=$(mage benchmark:diff bench-base bench-next bench-diff)
          echo "${OUTPUT}"
          echo "diff<<EOF" >> $GITHUB_OUTPUT && echo "$OUTPUT" >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

      - name: Summary report
        id: summary
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "SUMMARY<<$EOF"
          echo "### Benchmark Summary :rocket:"
          echo
          echo "<details><summary>Benchmark diff with base branch</summary>"
          echo "\`\`\`bash  "
          echo "blah"
          echo "\`\`\` "
          echo "</details>"
          echo "<details><summary>Benchmark result</summary>"
          echo "\`\`\`bash"
          echo "blah"
          echo "\`\`\`"
          echo "</details>"
          echo "$EOF"
          echo "${SUMMARY}" >> $GITHUB_STEP_SUMMARY


#      - name: Comment benchmark result
#        continue-on-error: true
#        uses: marocchino/sticky-pull-request-comment@v2
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          header: bench
#          message: |
#            ### Benchmark Result
#            <details><summary>Benchmark diff with base branch</summary>
#
#            ```
#            ${{ steps.bench.outputs.diff }}
#            ```
#            </details>
#
#            <details><summary>Benchmark result</summary>
#
#            ```
#            ${{ steps.bench.outputs.result }}
#            ```
#            </details>